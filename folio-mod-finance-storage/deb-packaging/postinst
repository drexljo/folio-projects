#!/bin/sh
# postinst script for folio-mod-finance-storage
#
# see: dh_installdeb(1)

set -e

# Set module name
FM_MODULE="mod-finance-storage"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
  configure)
    # Make sure the user exists
    if ! getent passwd folio-$FM_MODULE > /dev/null
      then
        adduser --system --quiet --home /var/lib/folio/$FM_MODULE \
          --no-create-home --shell /bin/false --group \
          --gecos "FOLIO $FM_MODULE user" folio-$FM_MODULE
    fi
    
    # Check validity of user and group
    if [ "$(id -u folio-$FM_MODULE)" = "0" ]
      then
        echo "The FOLIO $FM_MODULE user must not have uid 0 (root).
Please fix this and reinstall this package." >&2
        exit 1
    fi
    if [ "$(id -g folio-$FM_MODULE)" = "0" ]
      then
        echo "The FOLIO $FM_MODULE user must not have root as primary group.
Please fix this and reinstall this package." >&2
        exit 1
    fi

    # Create home directory if neccessary 
    mkdir -p /var/lib/folio/$FM_MODULE
    chown folio-$FM_MODULE:folio-$FM_MODULE /var/lib/folio/$FM_MODULE

    # Setup database if necessary
    if [ ! -f /etc/folio/$FM_MODULE/dbcredentials.env ]
      then
        # Only execute if script exists, which should be cared for by the 
        # package management installing folio-libmods
        if [ -f /usr/share/folio/libmods/bin/setup_database ]
          then
            /usr/share/folio/libmods/bin/setup_database $FM_MODULE
        fi
    fi

    # Find okapi
    if [ ! -f /etc/folio/$FM_MODULE/okapi_connect.env ]
      then
        # Only execute if script exists, which should be cared for by the
        # package management installing folio-libmods
        if [ -f /usr/share/folio/libmods/bin/search_tower ]
          then
            /usr/share/folio/libmods/bin/search_tower $FM_MODULE
        fi
    fi

    # Find tenants
    if [ ! -f /etc/folio/$FM_MODULE/tenants ]
      then
        # Only execute if script exists, which should be cared for by the
        # package management installing folio-libmods
        if [ -f /usr/share/folio/libmods/bin/boarding_call ]
          then
            /usr/share/folio/libmods/bin/boarding_call $FM_MODULE
        fi
    fi
    # Ask for ports and setup services, if necessary
    if ! ls -1 /etc/systemd/system/folio-$FM_MODULE.target.wants/folio-$FM_MODULE@* > /dev/null 2>&1
      then
        # only execute if script exists, which should be cared for by the
        # package management installing folio-libmods
        if [ -f /usr/share/folio/libmods/bin/setup_service ]
          then
            /usr/share/folio/libmods/bin/setup_service $FM_MODULE
        fi
    fi
    ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
